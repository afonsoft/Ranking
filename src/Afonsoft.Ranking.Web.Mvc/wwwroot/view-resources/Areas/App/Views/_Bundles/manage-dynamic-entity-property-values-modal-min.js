abp.inputTypeProviders=new function(){var e={};this.addInputTypeProvider=function(t){if(!t)throw new Error("Input type provider can not be null or undefined.");if("string"!=typeof t.name)throw new Error('Input type provider should have "name" property which is same unique name of InputType');if("function"!=typeof t.get)throw new Error('Input type provider should have "get" method which returns new manager for input type.');e[t.name]=t},this.getInputTypeInstance=function(t){if("string"==typeof t)return e[t].get();if("object"==typeof t&&"object"==typeof t.inputType){var n=e[t.inputType.name].get();return n.init(t.inputType,t.options),n}throw new Error("Parameter should be type of string (InputTypeName),or object which includes inputType and options")}};
var SingleLineStringInputType=function(){var e,n,t;return{name:"SINGLE_LINE_STRING",init:function(t,a){e=t,n=a},getSelectedValues:function(){return[t.val()]},getView:function(a,r){var i="text";return e.validator&&"NUMERIC"==e.validator.name&&(i="number"),t=$('<input class="form-control" type="'+i+'" />').on("change",function(){n&&"function"==typeof n.onChange&&n.onChange(t.val())}),"number"==i?(t.attr("min",feature._inputType.validator.minValue),t.attr("max",feature._inputType.validator.maxValue)):e.validator&&"STRING"==e.validator.name&&(e.validator.maxLength>0&&t.attr("maxlength",e.validator.maxLength),e.validator.minLength>0&&t.attr("required","required"),e.validator.regularExpression&&t.attr("pattern",e.validator.regularExpression)),t.on("input propertychange paste",function(){!function(){if(value=t.val(),e||!e.validator)return!0;var n=e.validator;if("STRING"==n.name){if(null==value||null==value)return n.allowNull;if("string"!=typeof value)return!1;if(n.minLength>0&&value.length<n.minLength)return!1;if(n.maxLength>0&&value.length>n.maxLength)return!1;if(n.regularExpression)return new RegExp(n.regularExpression).test(value)}else if("NUMERIC"==n.name){var a=parseInt(value);if(isNaN(a))return!1;var r=n.minValue;if(r>a)return!1;var i=n.maxValue;if(i>0&&a>i)return!1}return!0}()?t.addClass("input-textbox-invalid"):t.removeClass("input-textbox-invalid")}),a&&a.length>0&&t.val(a[0]),t[0]},hasValues:!1,afterViewInitialized:function(){}}};!function(){var e=new function(){this.name="SINGLE_LINE_STRING",this.get=function(){return new SingleLineStringInputType}};abp.inputTypeProviders.addInputTypeProvider(e)}();
var ComboBoxInputType=function(){var n,t;return{name:"COMBOBOX",init:function(t,e){n=e},getSelectedValues:function(){return[t.val()]},getView:function(e,o){if(t=$('<select class="form-control" />'),$("<option></option>").appendTo(t),o&&o.length>0)for(var i=0;i<o.length;i++)$("<option></option>").attr("value",o[i]).text(o[i]).appendTo(t);return t.on("change",function(){n&&"function"==typeof n.onChange&&n.onChange(t.val())}),e&&e.length>0&&t.val(e[0]),t[0]},hasValues:!0,afterViewInitialized:function(){}}};!function(){var n=new function(){this.name="COMBOBOX",this.get=function(){return new ComboBoxInputType}};abp.inputTypeProviders.addInputTypeProvider(n)}();
var CheckBoxInputType=function(){var e,n;return{name:"CHECKBOX",init:function(n,t){e=t},getSelectedValues:function(){return[n.prop("checked")]},getView:function(t,a){return $div=$('<div class="form-group checkbox-list">'),$label=$('<label class="checkbox">').appendTo($div),n=$('<input type="checkbox"/>').appendTo($label),$span=$("<span></span>").appendTo($label),n.on("change",function(){e&&"function"==typeof e.onChange&&e.onChange(n.val())}),t&&t.length>0&&n.prop("checked",t[0]),$div[0]},hasValues:!1,afterViewInitialized:function(){}}};!function(){var e=new function(){this.name="CHECKBOX",this.get=function(){return new CheckBoxInputType}};abp.inputTypeProviders.addInputTypeProvider(e)}();
var MultiSelectComboBoxInputType=function(){var e,t;return{name:"MULTISELECTCOMBOBOX",init:function(t,n){e=n},getSelectedValues:function(){return t.val()},getView:function(n,o){if(t=$('<select class="form-control w-100" multiple/>'),o&&o.length>0)for(var i=0;i<o.length;i++){var a=$("<option></option>").attr("value",o[i]).text(o[i]);n&&n.length>0&&-1!==n.indexOf(o[i])&&a.attr("selected","selected"),a.appendTo(t)}return t.on("change",function(){e&&"function"==typeof e.onChange&&e.onChange(t.val())}),t[0]},hasValues:!0,afterViewInitialized:function(){t.select2({width:"100%"})}}};!function(){var e=new function(){this.name="MULTISELECTCOMBOBOX",this.get=function(){return new MultiSelectComboBoxInputType}};abp.inputTypeProviders.addInputTypeProvider(e)}();
var ManageDynamicEntityPropertyValueBase=function(e){return function(){var t,a=abp.services.app.dynamicEntityPropertyValue,n=[],i={delete:abp.auth.hasPermission("Pages.Administration.DynamicEntityPropertyValue.Delete")};function p(n,p){var r=p.getView(n.selectedValues,n.allValuesInputTypeHas),y=e("<tr></tr>"),u=e("<td></td>");u.text(n.propertyName);var l=e("<td></td>").append(r);l.append(r);var s=e("<td></td>");if(i.delete){var c=e('<button class="btn btn-danger"></button>').text(app.localize("Delete")).click(function(){var e;e={dynamicPropertyName:n.dynamicPropertyName,dynamicEntityPropertyId:n.dynamicEntityPropertyId},abp.message.confirm(app.localize("DeleteDynamicEntityPropertyValueMessage",e.dynamicPropertyName),app.localize("AreYouSure"),function(n){n&&(abp.ui.setBusy(),a.cleanValues({dynamicEntityPropertyId:e.dynamicEntityPropertyId,entityId:t.entityId}).done(function(){abp.notify.success(app.localize("SuccessfullyDeleted")),"function"==typeof t.onDeleteValues&&t.onDeleteValues()}).always(function(){abp.ui.clearBusy()}))})});s.append(c)}return y.append(u),y.append(l),y.append(s),y}return{initialize:function(i){abp.ui.setBusy(),t=i,n=[],a.getAllDynamicEntityPropertyValues({entityFullName:i.entityFullName,entityId:i.entityId}).done(function(t){var a=e(i.bodyElement);if(!t||!t.items||0==t.items.length){var r=e("<tr></tr>"),y=e("<td class='text-center' colspan='3'></td>");return y.text(app.localize("ThereAreNoDynamicPropertiesMessage")),r.append(y),void a.append(r)}for(var u=0;u<t.items.length;u++){var l=t.items[u],s=abp.inputTypeProviders.getInputTypeInstance({inputType:l.inputType});a.append(p(l,s)),s.afterViewInitialized(),n.push({data:l,inputTypeManager:s})}}).always(function(){abp.ui.clearBusy()})},save:function(e){if(n){abp.ui.setBusy();for(var i=[],p=0;p<n.length;p++)i.push({entityId:t.entityId,dynamicEntityPropertyId:n[p].data.dynamicEntityPropertyId,values:n[p].inputTypeManager.getSelectedValues()});a.insertOrUpdateAllValues({Items:i}).done(function(){abp.notify.success(app.localize("SavedSuccessfully")),"function"==typeof e&&e()}).always(function(){abp.ui.clearBusy()})}}}}}(jQuery);
app.modals.ManageDynamicEntityPropertyValuesModal=function(){var a,t=new ManageDynamicEntityPropertyValueBase;this.init=function(e){a=e,function e(){var n=a.getModal().find("#DynamicEntityPropertyValuesTable");n.find("tbody").empty(),t.initialize({entityFullName:a.getModal().find("#EntityFullName").val(),entityId:a.getModal().find("#EntityId").val(),bodyElement:n.find("tbody"),onDeleteValues:function(){e()}})}()},this.save=function(){t.save(function(){a.close()})}},app.modals.ManageDynamicEntityPropertyValuesModal.create=function(){return new app.ModalManager({viewUrl:abp.appPath+"App/DynamicEntityPropertyValue/ManageDynamicEntityPropertyValuesModal",scriptUrl:abp.appPath+"view-resources/Areas/App/Views/DynamicEntityPropertyValues/ManageDynamicEntityPropertyValuesModal.js",modalClass:"ManageDynamicEntityPropertyValuesModal",cssClass:"scrollable-modal"})};